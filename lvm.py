import os
loginto=input("Chose login to local/remote system : ")
print(loginto)
if loginto=="remote":
    remoteip=input("Enter the Remote system Ip: ")
os.system("clear")
def lvm():
    os.system("fdisk -l")
    pvname=input("Enter the Physical Volume Device Name(example: /dev/sdb): ")
    os.system("pvcreate {}".format(pvname))
    vgname=input("Enter the Volume Group Name: ")
    os.system("vgcreate {} {}".format(vgname,pvname))
    os.system("vgs")
    lvsize=input("Enter the Size of LV(example: 5G): ")
    lvname=input("Enter the Logical Volume Name: ")
    os.system("lvcreate -L {} -n {} {}".format(lvsize,lvname,vgname))
    os.system("lvs")
    os.system("lsblk")
    filesystem=input("Enter the File system(example: xfs,ext4): ")
    os.system("mkfs.{} /dev/{}/{}".format(filesystem,vgname,lvname))
    mount_lvm=input("Enter the path of Existing directory to mount to LVM: ")
    os.system("mount /dev/{}/{} {}".format(vgname,lvname,mount_lvm))
    os.system("df -h")
    os.system("lsblk")
    return
def lvmremote():
    os.system("ssh  {}  fdisk -l".format(remoteip))
    pvname=input("Enter the Physical Volume Device Name(example: /dev/sdb): ")
    os.system("ssh  {}  pvcreate {}".format(remoteip,pvname))
    vgname=input("Enter the Volume Group Name: ")
    os.system("ssh  {}  vgcreate {} {}".format(remoteip,vgname,pvname))
    os.system("ssh  {}  vgs".format(remoteip))
    lvsize=input("Enter the Size of LV(example: 5G): ")
    lvname=input("Enter the Logical Volume Name: ")
    os.system("ssh  {}  lvcreate -L {} -n {} {}".format(remoteip,lvsize,lvname,vgname))
    os.system("ssh  {}  lvs".format(remoteip))
    os.system("ssh  {}  lsblk".format(remoteip))
    filesystem=input("Enter the File system(example: xfs,ext4): ")
    os.system("ssh  {}  mkfs.{} /dev/{}/{}".format(remoteip,filesystem,vgname,lvname))
    mount_lvm=input("Enter the path of Existing directory to mount to LVM: ")
    os.system("ssh  {}  mount /dev/{}/{} {}".format(remoteip,vgname,lvname,mount_lvm))
    os.system("ssh  {}  df -h".format(remoteip))
    os.system("ssh  {}  lsblk".format(remoteip))
if loginto=="local":
    lvm()
elif loginto=="remote":
    lvmremote()
else:
    print("Incorrect Option Selected,Select Correct Option local or remote")
    exit()